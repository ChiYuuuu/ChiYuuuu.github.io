{"pages":[],"posts":[{"title":"PHP开发中常用的设计模式","text":"设计模式是软件设计中常见问题的典型解决方案;目的是为了更好的代码重用性，可读性，可靠性和可维护性 一、设计原则 单一职责原则 接口隔离原则 里氏代换原则 开闭原则 依赖倒置原则 迪米特原则 单一职责原则","link":"/2022/03/06/PHP%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"},{"title":"PHP面试准备","text":"","link":"/2022/03/06/PHP%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"},{"title":"vue中使用fullcalendar","text":"demo地址: https://github.com/ChiYuuuu/vue-fullcalendar-demo 一、安装默认安装的插件 月视图 @fullcalendar/daygrid 互动插件 @fullcalendar/interaction 1234// vue2npm install --save @fullcalendar/vue @fullcalendar/core @fullcalendar/daygrid @fullcalendar/interaction// vue3npm install --save @fullcalendar/vue3 @fullcalendar/core @fullcalendar/daygrid @fullcalendar/interaction 二、使用显示农历、节气、节日等使用 lunar 库 https://github.com/6tail/lunar-javascript npm install lunar-javascript 12import {Lunar, Solar} from 'lunar-javascript'// Lunar 阴历 Solar 阳历 样式修改1234/*添加日期单元格hover样式*/.fc .fc-daygrid-day-frame:hover { background: #f0f8ff;}","link":"/2022/02/24/vue%E4%B8%AD%E4%BD%BF%E7%94%A8fullcalendar/"},{"title":"常用Laravel-Artisan命令","text":"一、数据迁移 创建迁移文件 php artisan make:migration create_users_table 执行迁移 php artisan migrate 二、控制器 指定目录下创建控制器 php artisan make:controller FileName/IndexController 创建 Rest 风格资源控制器（带有 index、create、store、edit、update、destroy、show 方法）末尾追加 –resource php artisan make:controller IndexController --resource 三、模型 指定目录下创建模型 php artisan make:model FileName/ModelName 一并创建迁移文件，末尾追加 -m php artisan make:model FileName/ModelName -m","link":"/2022/01/12/%E5%B8%B8%E7%94%A8Laravel-Artisan%E5%91%BD%E4%BB%A4/"},{"title":"小程序request封装","text":"官方文档 wx.request https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html wx.uploadFile https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/wx.uploadFile.html 创建request.js/utils 文件夹下新建request.js 示例代码: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172const config = { timeout: 60000}const request = (options) =&gt; { return new Promise((resolve, reject) =&gt; { wx.request({ url: options.url, data: options.data, timeout: config.timeout, method: options.method, header: { Token: '' }, success: (res) =&gt; { let data = res.data if (data.code == '0') { resolve(data) } else { handleSuccess(data) // reject(data) } }, fail: (err) =&gt; { wx.showToast({ title: err.errMsg, icon: 'none', duration: 2000 }) } }) })}/** * 处理成功回调 */function handleSuccess(data) { // 未登录或登录过期 if(data.code=='1'){ }}// export function uploadFiles(filePath,token){ // return new Promise((resolve, reject) =&gt; {// wx.uploadFile({// url:`${URL_PREV}upload`,// filePath:filePath,// name: 'file',// header:{// 'content-type':'multipart/form-data',// 'x-token':token// },// success: function(res){// let data = JSON.parse(res.data);// if (data.code==200) {// resolve(data.link);// }else {// reject(data.message);// }// }// })// }).catch(function(e){// wx.showToast({// title: e,// icon: 'none',// duration: 1500// })// });// };export default request","link":"/2022/03/29/%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85/"},{"title":"js中常用的库","text":"JavaScript 日期处理类库Moment.js http://momentjs.cn/ 123456npm install momentimport moment from 'moment'moment().format('YYYY-MM-DD');// 2022-03-11moment(&quot;20111031&quot;, &quot;YYYYMMDD&quot;).fromNow(); // 10 years ago JavaScript 表单数据验证validator.js https://github.com/validatorjs/validator.js 12345npm install validatorimport validator from 'validator';validator.isEmail('foo@bar.com'); //=&gt; true","link":"/2022/03/11/js%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BA%93/"},{"title":"移动端网页开发","text":"一、相关问题1.PC与移动端开发是共用一套代码？还是两套独立开发？ 对于复杂的或是UI展示差异较大的系统,分开做来得更方便 2.配置文件权重? vue.config.js &gt; .postcssrx.js &gt; postcss.config.js 二、HTML viewport1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=no, minimum-sacle=1, maximum-scale=1&quot; &gt; 三、rem布局rem（font size of the root element）相对于根元素的字体大小的单位 postcss-pxtorem 插件将像素单元转换rem单位 npm install postcss-pxtorem --save-dev .postcssrx.js 123456789101112module.exports = { &quot;plugins&quot;: { &quot;postcss-pxtorem&quot;: { rootValue: 108,//结果为：设计稿元素尺寸/16，比如元素宽320px,最终页面会换算成 20rem unitPrecision: 6, // 转换后的精度，即小数点位数 propList: ['*'],//// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换 minPixelValue: 2, // 默认值1，小于或等于1px则不进行转换 exclude: [/node_modules/], // 设置忽略文件，用正则做目录名匹配 mediaQuery: false,//是否在媒体查询的css代码中也进行转换，默认false } }} 针对大屏可设置最大宽度,这是vw无法做到的 四、vw布局vw/vh 将页面分为 100 份，1vw = device-width/100 postcss-px-to-viewport npm i postcss-px-to-viewport --save-dev .postcssrc.js 1234567891011121314151617181920module.exports = { plugins: { autoprefixer: {}, // 用来给不同的浏览器自动添加相应前缀，如-webkit-，-moz-等等 'postcss-px-to-viewport': { unitToConvert: 'px', // 要转化的单位 viewportWidth: 750, // UI设计稿的宽度 unitPrecision: 6, // 转换后的精度，即小数点位数 propList: ['*'], // 指定转换的css属性的单位，*代表全部css属性的单位都进行转换 viewportUnit: 'vw', // 指定需要转换成的视窗单位，默认vw fontViewportUnit: 'vw', // 指定字体需要转换成的视窗单位，默认vw selectorBlackList: ['wrap'], // 指定不转换为视窗单位的类名， minPixelValue: 1, // 默认值1，小于或等于1px则不进行转换 mediaQuery: false, // 是否在媒体查询的css代码中也进行转换，默认false replace: true, // 是否转换后直接更换属性值 exclude: [/node_modules/], // 设置忽略文件，用正则做目录名匹配 landscape: false, // 是否处理横屏情况 }, },};","link":"/2022/01/05/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91/"},{"title":"md文档排版规范","text":"一、Markdown 标记的典型使用标题 文章的顶层标题使用二级标题（有时文章的标题并不需要写在文章里，比如大多数博客有专门的位置填写文章标题，此时这级标题可以省略） 每个小节的标题使用三级标题 尽量少用五级标题和六级标题，考虑用有序列表和无序列表代替 完全不用一级标题 空行正文段落之间用一个空行来分隔，可以显得段落分明、结构不拥挤，如： Markdown 是一种标记语言。在写作时，你的所有文字都是没有样式的纯文本，在其中插入若干 Markdown 标记后，被标记的文字便有了样式。 比如，在你所写的文字中，希望某一行的最终排版呈现一级标题的样式，那就给这行文字加个一级标题的标记；某个地方有两个字需要加粗，那就给这两个字加个粗体标记。","link":"/2021/11/08/md%E6%96%87%E6%A1%A3%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/"},{"title":"php&amp;js代码中的命名规范","text":"一、文件&amp;目录命名 全部小写，下划线 _ 分隔。例：styles 、data_models 二、变量命名 一般采用 lowerCamelCase 风格 代码中的命名均不能以 _ 或 $ 开始，也不能以 _ 或 $ 结束 常量命名 全部大写，例：MAX_STOCK_COUNT 、 CACHE_EXPIRED_TIME 三、函数命名 一般采用 lowerCamelCase 风格 动词(do) + 名词(something)，例：addTableEntry() 、deleteUrl() 类别 单词 添加/插入/创建/初始化/加载 add、append、insert、create、initialize、load 删除/销毁 delete、remove、destroy 打开/开始/启动 open、start 关闭/停止 close、stop 获取/读取/查找/查询 get、fetch、acquire、read、search、find、query 设置/重置/放入/写入/释放/刷新 set、reset、put、write、release、refresh 发送/推送 send、push 接收/拉取 receive、pull 提交/撤销/取消 submit、cancel 收集/采集/选取/选择 collect、pick、select 提取/解析 sub、extract、parse 编码/解码 encode、decode 填充/打包/压缩 fill、pack、compress 清空/拆包/解压 flush、clear、unpack、decompress 增加/减少 increase、decrease、reduce 分隔/拼接 split、join、concat 过滤/校验/检测 filter、valid、check","link":"/2021/12/18/php&js%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"}],"tags":[{"name":"PHP","slug":"PHP","link":"/tags/PHP/"},{"name":"设计模式","slug":"设计模式","link":"/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"},{"name":"面试","slug":"面试","link":"/tags/%E9%9D%A2%E8%AF%95/"},{"name":"css","slug":"css","link":"/tags/css/"},{"name":"js","slug":"js","link":"/tags/js/"},{"name":"html","slug":"html","link":"/tags/html/"},{"name":"artisan","slug":"artisan","link":"/tags/artisan/"},{"name":"小程序","slug":"小程序","link":"/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"request","slug":"request","link":"/tags/request/"},{"name":"vue","slug":"vue","link":"/tags/vue/"},{"name":"fullcalendar","slug":"fullcalendar","link":"/tags/fullcalendar/"},{"name":"工具","slug":"工具","link":"/tags/%E5%B7%A5%E5%85%B7/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"规范","slug":"规范","link":"/tags/%E8%A7%84%E8%8C%83/"}],"categories":[{"name":"设计模式","slug":"设计模式","link":"/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"},{"name":"面试","slug":"面试","link":"/categories/%E9%9D%A2%E8%AF%95/"},{"name":"HTML","slug":"HTML","link":"/categories/HTML/"},{"name":"laravel","slug":"laravel","link":"/categories/laravel/"},{"name":"小程序","slug":"小程序","link":"/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"demo","slug":"demo","link":"/categories/demo/"},{"name":"js","slug":"js","link":"/categories/js/"},{"name":"markdown","slug":"markdown","link":"/categories/markdown/"},{"name":"命名","slug":"命名","link":"/categories/%E5%91%BD%E5%90%8D/"}]}