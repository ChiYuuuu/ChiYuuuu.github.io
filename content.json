{"pages":[],"posts":[{"title":"md文档排版规范","text":"一、Markdown 标记的典型使用标题 文章的顶层标题使用二级标题（有时文章的标题并不需要写在文章里，比如大多数博客有专门的位置填写文章标题，此时这级标题可以省略） 每个小节的标题使用三级标题 尽量少用五级标题和六级标题，考虑用有序列表和无序列表代替 完全不用一级标题 空行正文段落之间用一个空行来分隔，可以显得段落分明、结构不拥挤，如： Markdown 是一种标记语言。在写作时，你的所有文字都是没有样式的纯文本，在其中插入若干 Markdown 标记后，被标记的文字便有了样式。 比如，在你所写的文字中，希望某一行的最终排版呈现一级标题的样式，那就给这行文字加个一级标题的标记；某个地方有两个字需要加粗，那就给这两个字加个粗体标记。","link":"/2021/11/08/md%E6%96%87%E6%A1%A3%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/"},{"title":"移动端网页开发","text":"一、相关问题1.PC与移动端开发是共用一套代码？还是两套独立开发？ 对于复杂的或是UI展示差异较大的系统,分开做来得更方便 2.配置文件权重? vue.config.js &gt; .postcssrx.js &gt; postcss.config.js 二、HTML viewport1&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=no, minimum-sacle=1, maximum-scale=1&quot; &gt; 三、rem布局rem（font size of the root element）相对于根元素的字体大小的单位 postcss-pxtorem 插件将像素单元转换rem单位 npm install postcss-pxtorem --save-dev .postcssrx.js 123456789101112module.exports = { &quot;plugins&quot;: { &quot;postcss-pxtorem&quot;: { rootValue: 108,//结果为：设计稿元素尺寸/16，比如元素宽320px,最终页面会换算成 20rem unitPrecision: 6, // 转换后的精度，即小数点位数 propList: ['*'],//// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换 minPixelValue: 2, // 默认值1，小于或等于1px则不进行转换 exclude: [/node_modules/], // 设置忽略文件，用正则做目录名匹配 mediaQuery: false,//是否在媒体查询的css代码中也进行转换，默认false } }} 针对大屏可设置最大宽度,这是vw无法做到的 四、vw布局vw/vh 将页面分为 100 份，1vw = device-width/100 postcss-px-to-viewport npm i postcss-px-to-viewport --save-dev .postcssrc.js 1234567891011121314151617181920module.exports = { plugins: { autoprefixer: {}, // 用来给不同的浏览器自动添加相应前缀，如-webkit-，-moz-等等 'postcss-px-to-viewport': { unitToConvert: 'px', // 要转化的单位 viewportWidth: 750, // UI设计稿的宽度 unitPrecision: 6, // 转换后的精度，即小数点位数 propList: ['*'], // 指定转换的css属性的单位，*代表全部css属性的单位都进行转换 viewportUnit: 'vw', // 指定需要转换成的视窗单位，默认vw fontViewportUnit: 'vw', // 指定字体需要转换成的视窗单位，默认vw selectorBlackList: ['wrap'], // 指定不转换为视窗单位的类名， minPixelValue: 1, // 默认值1，小于或等于1px则不进行转换 mediaQuery: false, // 是否在媒体查询的css代码中也进行转换，默认false replace: true, // 是否转换后直接更换属性值 exclude: [/node_modules/], // 设置忽略文件，用正则做目录名匹配 landscape: false, // 是否处理横屏情况 }, },};","link":"/2022/01/05/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91/"},{"title":"php&amp;js代码中的命名规范","text":"一、文件&amp;目录命名 全部小写，下划线 _ 分隔。例：styles 、data_models 二、变量命名 一般采用 lowerCamelCase 风格 代码中的命名均不能以 _ 或 $ 开始，也不能以 _ 或 $ 结束 常量命名 全部大写，例：MAX_STOCK_COUNT 、 CACHE_EXPIRED_TIME 三、函数命名 一般采用 lowerCamelCase 风格 动词(do) + 名词(something)，例：addTableEntry() 、deleteUrl() 类别 单词 添加/插入/创建/初始化/加载 add、append、insert、create、initialize、load 删除/销毁 delete、remove、destroy 打开/开始/启动 open、start 关闭/停止 close、stop 获取/读取/查找/查询 get、fetch、acquire、read、search、find、query 设置/重置/放入/写入/释放/刷新 set、reset、put、write、release、refresh 发送/推送 send、push 接收/拉取 receive、pull 提交/撤销/取消 submit、cancel 收集/采集/选取/选择 collect、pick、select 提取/解析 sub、extract、parse 编码/解码 encode、decode 填充/打包/压缩 fill、pack、compress 清空/拆包/解压 flush、clear、unpack、decompress 增加/减少 increase、decrease、reduce 分隔/拼接 split、join、concat 过滤/校验/检测 filter、valid、check","link":"/2021/12/18/php&js%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"},{"title":"常用Laravel-Artisan命令","text":"一、数据迁移 创建迁移文件 php artisan make:migration create_users_table 执行迁移 php artisan migrate 二、控制器 指定目录下创建控制器 php artisan make:controller FileName/IndexController 创建 Rest 风格资源控制器（带有 index、create、store、edit、update、destroy、show 方法）末尾追加 –resource php artisan make:controller IndexController --resource 三、模型 指定目录下创建模型 php artisan make:model FileName/ModelName 一并创建迁移文件，末尾追加 -m php artisan make:model FileName/ModelName -m","link":"/2022/01/12/%E5%B8%B8%E7%94%A8Laravel-Artisan%E5%91%BD%E4%BB%A4/"},{"title":"vue中使用fullcalendar","text":"demo地址: https://github.com/ChiYuuuu/vue-fullcalendar-demo 一、安装默认安装的插件 月视图 @fullcalendar/daygrid 互动插件 @fullcalendar/interaction 1234// vue2npm install --save @fullcalendar/vue @fullcalendar/core @fullcalendar/daygrid @fullcalendar/interaction// vue3npm install --save @fullcalendar/vue3 @fullcalendar/core @fullcalendar/daygrid @fullcalendar/interaction 二、使用显示农历、节气、节日等使用 lunar 库 https://github.com/6tail/lunar-javascript npm install lunar-javascript 12import {Lunar, Solar} from 'lunar-javascript'// Lunar 阴历 Solar 阳历 样式修改1234/*添加日期单元格hover样式*/.fc .fc-daygrid-day-frame:hover { background: #f0f8ff;} 自定义其他内容1234567891011121314151617181920// 使用插槽 &lt;template v-slot:eventContent=&quot;arg&quot;&gt; &lt;el-popover placement=&quot;left&quot; title=&quot;&quot; width=&quot;300&quot; :visible-arrow=&quot;false&quot; trigger=&quot;hover&quot; popper-class=&quot;custom-poper-class&quot; &gt; &lt;div class=&quot;popover-content&quot;&gt; &lt;p&gt;{{ arg.event.extendedProps.custom_title }}&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;reference&quot; class=&quot;popover&quot;&gt; &lt;div class=&quot;fc-daygrid-event-dot&quot;&gt;&lt;/div&gt; &lt;div class=&quot;fc-event-time&quot;&gt;{{ arg.event.title }}&lt;/div&gt; &lt;/div&gt; &lt;/el-popover&gt; &lt;/template&gt; API123const calendarApi = this.$refs.fullCalendar.getApi();calendarApi.gotoDate(date); // 跳转到指定日期calendarApi.getEvents(); // 获取所有事件","link":"/2022/02/24/vue%E4%B8%AD%E4%BD%BF%E7%94%A8fullcalendar/"}],"tags":[{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"规范","slug":"规范","link":"/tags/%E8%A7%84%E8%8C%83/"},{"name":"css","slug":"css","link":"/tags/css/"},{"name":"js","slug":"js","link":"/tags/js/"},{"name":"html","slug":"html","link":"/tags/html/"},{"name":"artisan","slug":"artisan","link":"/tags/artisan/"},{"name":"vue","slug":"vue","link":"/tags/vue/"},{"name":"fullcalendar","slug":"fullcalendar","link":"/tags/fullcalendar/"}],"categories":[{"name":"markdown","slug":"markdown","link":"/categories/markdown/"},{"name":"命名","slug":"命名","link":"/categories/%E5%91%BD%E5%90%8D/"},{"name":"HTML","slug":"HTML","link":"/categories/HTML/"},{"name":"laravel","slug":"laravel","link":"/categories/laravel/"},{"name":"demo","slug":"demo","link":"/categories/demo/"}]}