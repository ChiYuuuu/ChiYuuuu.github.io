{"pages":[],"posts":[{"title":"代码中的命名规范","text":"函数命名, 变量命名, 文件命名尽可能使用描述性的命名; 少用缩写. 文件命名文件名要全部小写, 可以包含下划线 (_) 或连字符 (-), 依照项目的约定. 如果没有约定, 那么 “_” 更好. 通常应尽量让文件名更加明确. http_server_logs.h 就比 logs.h 要好. 定义类时文件名一般成对出现, 如 foo_bar.h 和 foo_bar.cc, 对应于类 FooBar. 类型命名类型名称的每个单词首字母均大写(大驼峰命名法), 不包含下划线: MyExcitingClass, MyExcitingEnum 12class UrlTable { ...class UrlTableTester { ... 变量命名变量 (包括函数参数) 和数据成员名一律小写, 单词之间用下划线连接. 类的成员变量以下划线结尾, 但结构体的就不用, 如: a_local_variable, a_struct_data_member, a_class_data_member_. 普通变量123string table_name; // 好 - 用下划线.string tablename; // 好 - 全小写.string tableName; // 差 - 混合大小写 类数据成员不管是静态的还是非静态的, 类数据成员都可以和普通变量一样, 但要接下划线. 1234567class TableInfo { ... private: string table_name_; // 好 - 后加下划线. string tablename_; // 好. static Pool&lt;TableInfo&gt;* pool_; // 好.}; 常量命名常量的名字应该都使用大写字母，并且指出该常量完整含义。如果一个常量名称由多个单词组成，则应该用下划线来分割这些单词。例如：MAX_VALUE","link":"/2021/12/18/%E4%BB%A3%E7%A0%81%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"},{"title":"md文档排版规范","text":"一、Markdown 标记的典型使用标题 文章的顶层标题使用二级标题（有时文章的标题并不需要写在文章里，比如大多数博客有专门的位置填写文章标题，此时这级标题可以省略） 每个小节的标题使用三级标题 小节中进一步分层组织时使用四级标题 尽量少用五级标题和六级标题，考虑用有序列表和无序列表代替 完全不用一级标题 空行正文段落之间用一个空行来分隔，可以显得段落分明、结构不拥挤，如： Markdown 是一种标记语言。在写作时，你的所有文字都是没有样式的纯文本，在其中插入若干 Markdown 标记后，被标记的文字便有了样式。 比如，在你所写的文字中，希望某一行的最终排版呈现一级标题的样式，那就给这行文字加个一级标题的标记；某个地方有两个字需要加粗，那就给这两个字加个粗体标记。","link":"/2021/11/08/md%E6%96%87%E6%A1%A3%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/"}],"tags":[{"name":"规范","slug":"规范","link":"/tags/%E8%A7%84%E8%8C%83/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"}],"categories":[{"name":"markdown","slug":"markdown","link":"/categories/markdown/"},{"name":"命名","slug":"命名","link":"/categories/%E5%91%BD%E5%90%8D/"}]}