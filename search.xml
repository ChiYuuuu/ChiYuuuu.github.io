<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>创建一个全新的Vue3项目</title>
      <link href="/2022/04/15/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AAVue%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/04/15/%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%80%E4%B8%AAVue%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>从头开始创建一个全新的Vue3项目</p><span id="more"></span><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://staging-cn.vuejs.org/guide/introduction.html">Vue文档</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://nodejs.org/en/">先安装node</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install vue</span><br><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure><!--more--><h2 id="全局环境变量"><a href="#全局环境变量" class="headerlink" title="全局环境变量"></a>全局环境变量</h2><p>根目录下新建 <strong>env</strong> 文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.<span class="built_in">env</span>                <span class="comment"># 所有情况下都会加载</span></span><br><span class="line">.env.local          <span class="comment"># 所有情况下都会加载，但会被 git 忽略</span></span><br><span class="line">.<span class="built_in">env</span>.[mode]         <span class="comment"># 只在指定模式下加载 </span></span><br><span class="line">.<span class="built_in">env</span>.[mode].<span class="built_in">local</span>   <span class="comment"># 只在指定模式下加载，但会被 git 忽略</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.env.production <span class="comment">#生产模式</span></span><br><span class="line">.env.development <span class="comment">#开发模式</span></span><br></pre></td></tr></table></figure><p><code>import.meta.env.VITE_TITLE</code> 获取环境变量</p><p>只有以 <code>VITE_</code> 为前缀的变量才会暴露给经过 vite 处理的代码</p><h3 id="重置全局样式"><a href="#重置全局样式" class="headerlink" title="重置全局样式"></a>重置全局样式</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  normalize.css</span><br></pre></td></tr></table></figure><p>main.js引入 <code>import &#39;normalize.css/normalize.css&#39;</code></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo中使用live2d</title>
      <link href="/2022/03/30/Hexo%E4%B8%AD%E4%BD%BF%E7%94%A8live2d/"/>
      <url>/2022/03/30/Hexo%E4%B8%AD%E4%BD%BF%E7%94%A8live2d/</url>
      
        <content type="html"><![CDATA[<p>Live2D是一种应用于电子游戏的绘图渲染技术，由日本Cybernoids公司开发，通过一系列的连续图像和人物建模来生成一种类似二维图像的三维模型;画师只需要绘制一张原画，然后将身体、五官、发型、服装等2D图片放到全3D的模型模板上。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">hexo-helper-live2d官方中文文档</a> ; 安装 live2d 前确保已经搭建好hexo网站</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>根目录下的<code>_config.yml</code>添加live2d 配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否启动</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span>  <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span>  <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span>  <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span>  <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span>  <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget</span>  <span class="comment">## 模型文件</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># 定位方向 left right top bottom</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span>  <span class="comment"># 小人宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#  小人高度</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">-15</span>  <span class="comment"># 向👇偏移</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-15</span>  <span class="comment"># 像👈偏移</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span>  <span class="comment"># 手机端是否显示</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span>  <span class="comment"># 模型透明度</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="选择人物模型"><a href="#选择人物模型" class="headerlink" title="选择人物模型"></a>选择人物模型</h2><ol><li><p><strong>网络链接</strong></p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">   <span class="attr">use:</span> <span class="string">https://imuncle.github.io/live2d/model/HyperdimensionNeptunia/vert_classic/index.json</span> <span class="comment">## 模型文件</span></span><br></pre></td></tr></table></figure></li><li><p><strong>本地文件</strong></p><p> 根目录下创建<code>live2d_models</code>文件夹 在此文件夹下新建模型文件夹例:<code>live2d-widget-model-koharu</code></p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">   <span class="attr">use:</span> <span class="string">live2d-widget-model-koharu</span></span><br></pre></td></tr></table></figure><p> 使用npm 安装模型文件</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p> 将<code>live2d-widget-model-koharu</code>文件夹复制到<code>live2d_models</code> 下即可</p></li></ol><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序request封装</title>
      <link href="/2022/03/29/%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85/"/>
      <url>/2022/03/29/%E5%B0%8F%E7%A8%8B%E5%BA%8Frequest%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>对小程序网络请求;请求参数,失败回调,成功回调统一处理</p><span id="more"></span><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html">wx.request</a>,        <a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/wx.uploadFile.html">wx.uploadFile</a></p><h2 id="创建request-js"><a href="#创建request-js" class="headerlink" title="创建request.js"></a>创建request.js</h2><p><code>/utils</code> 文件夹下新建<code>request.js</code></p><p>示例代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">60000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">request</span> = (<span class="params">options</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: options.<span class="property">url</span>,</span><br><span class="line">      <span class="attr">data</span>: options.<span class="property">data</span>,</span><br><span class="line">      <span class="attr">timeout</span>: config.<span class="property">timeout</span>,</span><br><span class="line">      <span class="attr">method</span>: options.<span class="property">method</span>,</span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="title class_">Token</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> data = res.<span class="property">data</span></span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">code</span> == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(data)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">handleSuccess</span>(data)</span><br><span class="line">          <span class="comment">// reject(data)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: err.<span class="property">errMsg</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">2000</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理成功回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSuccess</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="comment">// 未登录或登录过期</span></span><br><span class="line">    <span class="keyword">if</span>(data.<span class="property">code</span>==<span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// export function uploadFiles(filePath,token)&#123;   </span></span><br><span class="line"><span class="comment">//   return new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     wx.uploadFile(&#123;</span></span><br><span class="line"><span class="comment">//       url:`$&#123;URL_PREV&#125;upload`,</span></span><br><span class="line"><span class="comment">//       filePath:filePath,</span></span><br><span class="line"><span class="comment">//       name: &#x27;file&#x27;,</span></span><br><span class="line"><span class="comment">//       header:&#123;</span></span><br><span class="line"><span class="comment">//         &#x27;content-type&#x27;:&#x27;multipart/form-data&#x27;,</span></span><br><span class="line"><span class="comment">//         &#x27;x-token&#x27;:token</span></span><br><span class="line"><span class="comment">//       &#125;,</span></span><br><span class="line"><span class="comment">//       success: function(res)&#123;</span></span><br><span class="line"><span class="comment">//         let data = JSON.parse(res.data);</span></span><br><span class="line"><span class="comment">//         if (data.code==200) &#123;</span></span><br><span class="line"><span class="comment">//           resolve(data.link);</span></span><br><span class="line"><span class="comment">//         &#125;else &#123;</span></span><br><span class="line"><span class="comment">//           reject(data.message);</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">//   &#125;).catch(function(e)&#123;</span></span><br><span class="line"><span class="comment">//     wx.showToast(&#123;</span></span><br><span class="line"><span class="comment">//        title: e,</span></span><br><span class="line"><span class="comment">//        icon: &#x27;none&#x27;,</span></span><br><span class="line"><span class="comment">//        duration: 1500</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">//   &#125;);</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> request </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用fullcalendar</title>
      <link href="/2022/02/24/vue%E4%B8%AD%E4%BD%BF%E7%94%A8fullcalendar/"/>
      <url>/2022/02/24/vue%E4%B8%AD%E4%BD%BF%E7%94%A8fullcalendar/</url>
      
        <content type="html"><![CDATA[<p>在vue中实现日历功能,并显示节气,节日.自定义点击事件,浮动弹窗<br>DEMO地址: <a href="https://github.com/ChiYuuuu/vue-fullcalendar-demo">https://github.com/ChiYuuuu/vue-fullcalendar-demo</a></p><span id="more"></span><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>默认安装的插件</p><ul><li>月视图 <code>@fullcalendar/daygrid</code></li><li>互动插件 <code>@fullcalendar/interaction</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue2</span></span><br><span class="line">npm install --save @fullcalendar/vue @fullcalendar/core @fullcalendar/daygrid @fullcalendar/interaction</span><br><span class="line"><span class="comment">// vue3</span></span><br><span class="line">npm install --save @fullcalendar/vue3 @fullcalendar/core @fullcalendar/daygrid @fullcalendar/interaction</span><br></pre></td></tr></table></figure><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><h3 id="显示农历、节气、节日等"><a href="#显示农历、节气、节日等" class="headerlink" title="显示农历、节气、节日等"></a>显示农历、节气、节日等</h3><p>使用 lunar 库 <a href="https://github.com/6tail/lunar-javascript">https://github.com/6tail/lunar-javascript</a></p><p> <code>npm install lunar-javascript</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Lunar</span>, <span class="title class_">Solar</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;lunar-javascript&#x27;</span></span><br><span class="line"><span class="comment">// Lunar 阴历 Solar 阳历</span></span><br></pre></td></tr></table></figure><h3 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*添加日期单元格hover样式*/</span></span><br><span class="line"><span class="selector-class">.fc</span> <span class="selector-class">.fc-daygrid-day-frame</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f0f8ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> fullcalendar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用Laravel-Artisan命令</title>
      <link href="/2022/01/12/%E5%B8%B8%E7%94%A8Laravel-Artisan%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/01/12/%E5%B8%B8%E7%94%A8Laravel-Artisan%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>Artisan是Laravel中自带的命令行工具的名称，它提供了一些对应用开发有帮助的命令；artisan是由强大的Symfony Console组件驱动的，开发者可以使用list命令查看所有可用的Artisan命令。<span id="more"></span></p><h2 id="一、数据迁移"><a href="#一、数据迁移" class="headerlink" title="一、数据迁移"></a>一、数据迁移</h2><ol><li><p>创建迁移文件</p><p><code>php artisan make:migration create_users_table</code></p></li><li><p>执行迁移</p><p><code>php artisan migrate</code></p><!--more --><h2 id="二、控制器"><a href="#二、控制器" class="headerlink" title="二、控制器"></a>二、控制器</h2></li><li><p>指定目录下创建控制器</p><p><code>php artisan make:controller FileName/IndexController</code></p></li><li><p>创建 Rest 风格资源控制器（带有 index、create、store、edit、update、destroy、show 方法）末尾追加 –resource</p><p><code>php artisan make:controller IndexController --resource</code></p></li></ol><h2 id="三、模型"><a href="#三、模型" class="headerlink" title="三、模型"></a>三、模型</h2><ol><li><p>指定目录下创建模型</p><p><code> php artisan make:model FileName/ModelName</code></p></li><li><p>一并创建迁移文件，末尾追加 -m</p><p><code> php artisan make:model FileName/ModelName -m</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端网页开发方案</title>
      <link href="/2022/01/05/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91/"/>
      <url>/2022/01/05/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%BD%91%E9%A1%B5%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>优先选择 rem 布局，能很好的按照设计稿进行开发，搭配媒体查询能让很好的解决大屏问题</p><span id="more"></span><h3 id="一、相关问题"><a href="#一、相关问题" class="headerlink" title="一、相关问题"></a>一、相关问题</h3><p>1.PC与移动端开发是共用一套代码？还是两套独立开发？</p><ul><li>对于复杂的或是UI展示差异较大的系统,分开做来得更方便</li></ul><p>2.配置文件权重?</p><ul><li><code>vue.config.js &gt; .postcssrx.js &gt; postcss.config.js</code></li></ul><h3 id="二、HTML-viewport"><a href="#二、HTML-viewport" class="headerlink" title="二、HTML viewport"></a>二、HTML viewport</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0, user-scalable=no, minimum-sacle=1, maximum-scale=1&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure><h3 id="三、rem布局"><a href="#三、rem布局" class="headerlink" title="三、rem布局"></a>三、rem布局</h3><p>rem（font size of the root element）相对于根元素的字体大小的单位</p><p>postcss-pxtorem 插件将像素单元转换rem单位</p><p><code>npm install postcss-pxtorem --save-dev</code></p><p> .postcssrx.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;postcss-pxtorem&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">rootValue</span>: <span class="number">108</span>,<span class="comment">//结果为：设计稿元素尺寸/16，比如元素宽320px,最终页面会换算成 20rem</span></span><br><span class="line">      <span class="attr">unitPrecision</span>: <span class="number">6</span>, <span class="comment">// 转换后的精度，即小数点位数</span></span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&#x27;*&#x27;</span>],<span class="comment">//// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span></span><br><span class="line">      <span class="attr">minPixelValue</span>: <span class="number">2</span>, <span class="comment">// 默认值1，小于或等于1px则不进行转换</span></span><br><span class="line">      <span class="attr">exclude</span>: [<span class="regexp">/node_modules/</span>], <span class="comment">// 设置忽略文件，用正则做目录名匹配</span></span><br><span class="line">      <span class="attr">mediaQuery</span>: <span class="literal">false</span>,<span class="comment">//是否在媒体查询的css代码中也进行转换，默认false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>针对大屏可设置<strong>最大宽度</strong>,这是<strong>vw</strong>无法做到的</p><h3 id="四、vw布局"><a href="#四、vw布局" class="headerlink" title="四、vw布局"></a>四、vw布局</h3><p>vw/vh 将页面分为 100 份，1vw = device-width/100</p><p>postcss-px-to-viewport</p><p><code>npm i postcss-px-to-viewport --save-dev</code></p><p>.postcssrc.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="attr">autoprefixer</span>: &#123;&#125;, <span class="comment">// 用来给不同的浏览器自动添加相应前缀，如-webkit-，-moz-等等</span></span><br><span class="line">    <span class="string">&#x27;postcss-px-to-viewport&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">unitToConvert</span>: <span class="string">&#x27;px&#x27;</span>, <span class="comment">// 要转化的单位</span></span><br><span class="line">      <span class="attr">viewportWidth</span>: <span class="number">750</span>, <span class="comment">// UI设计稿的宽度</span></span><br><span class="line">      <span class="attr">unitPrecision</span>: <span class="number">6</span>, <span class="comment">// 转换后的精度，即小数点位数</span></span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&#x27;*&#x27;</span>], <span class="comment">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span></span><br><span class="line">      <span class="attr">viewportUnit</span>: <span class="string">&#x27;vw&#x27;</span>, <span class="comment">// 指定需要转换成的视窗单位，默认vw</span></span><br><span class="line">      <span class="attr">fontViewportUnit</span>: <span class="string">&#x27;vw&#x27;</span>, <span class="comment">// 指定字体需要转换成的视窗单位，默认vw</span></span><br><span class="line">      <span class="attr">selectorBlackList</span>: [<span class="string">&#x27;wrap&#x27;</span>], <span class="comment">// 指定不转换为视窗单位的类名，</span></span><br><span class="line">      <span class="attr">minPixelValue</span>: <span class="number">1</span>, <span class="comment">// 默认值1，小于或等于1px则不进行转换</span></span><br><span class="line">      <span class="attr">mediaQuery</span>: <span class="literal">false</span>, <span class="comment">// 是否在媒体查询的css代码中也进行转换，默认false</span></span><br><span class="line">      <span class="attr">replace</span>: <span class="literal">true</span>, <span class="comment">// 是否转换后直接更换属性值</span></span><br><span class="line">      <span class="attr">exclude</span>: [<span class="regexp">/node_modules/</span>], <span class="comment">// 设置忽略文件，用正则做目录名匹配</span></span><br><span class="line">      <span class="attr">landscape</span>: <span class="literal">false</span>, <span class="comment">// 是否处理横屏情况</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MD文档排版规范</title>
      <link href="/2021/11/08/md%E6%96%87%E6%A1%A3%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/"/>
      <url>/2021/11/08/md%E6%96%87%E6%A1%A3%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种轻量级标记语言，可以使用它向纯文本文档添加格式化元素。 Markdown由John Gruber于2004年创建，现在是世界上最流行的标记语言之一。  </p><span id="more"></span><h3 id="Markdown-标记的典型使用"><a href="#Markdown-标记的典型使用" class="headerlink" title="Markdown 标记的典型使用"></a>Markdown 标记的典型使用</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><ul><li>文章的顶层标题使用<strong>二级标题</strong>（有时文章的标题并不需要写在文章里，比如大多数博客有专门的位置填写文章标题，此时这级标题可以省略）</li><li>每个小节的标题使用<strong>三级标题</strong></li><li>尽量少用<strong>五级标题</strong>和<strong>六级标题</strong>，考虑用有序列表和无序列表代替</li><li>完全不用<strong>一级标题</strong></li></ul><h4 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h4><p>正文段落之间用一个空行来分隔，可以显得段落分明、结构不拥挤，如：</p><p>Markdown 是一种标记语言。在写作时，你的所有文字都是没有样式的纯文本，在其中插入若干 Markdown 标记后，被标记的文字便有了样式。</p><p>比如，在你所写的文字中，希望某一行的最终排版呈现一级标题的样式，那就给这行文字加个一级标题的标记；某个地方有两个字需要加粗，那就给这两个字加个粗体标记。</p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 规范 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
